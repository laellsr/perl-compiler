<COMMENT_LINE,# Calculadora>
<SCALAR_IDENTIFIER,$numero1>
<OPERATOR_ASSIGN,=>
<FLOAT_NUMBER,10.5>
<SEMICOLON,;>
<SCALAR_IDENTIFIER,$numero2>
<OPERATOR_ASSIGN,=>
<SCALAR_IDENTIFIER,$numero1>
<OPERATOR_MUL,*>
<INTEGER_NUMBER,3>
<SEMICOLON,;>
<RESERVED_PRINT,print>
<STRING_PRINT,"Operação com $numero1 e $numero2">
<SEMICOLON,;>
<RESERVED_SUBROUTINE,sub>
<SUBROUTINE_IDENTIFIER,soma>
<LEFT_PAREN,(>
<SCALAR_IDENTIFIER,$numero1>
<COMMA,,>
<SCALAR_IDENTIFIER,$numero2>
<RIGHT_PAREN,)>
<LEFT_BRACE,{>
<SCALAR_IDENTIFIER,$res>
<OPERATOR_ASSIGN,=>
<SCALAR_IDENTIFIER,$numero1>
<OPERATOR_PLUS,+>
<SCALAR_IDENTIFIER,$numero2>
<SEMICOLON,;>
<RESERVED_RETURN,return>
<SCALAR_IDENTIFIER,$res>
<SEMICOLON,;>
<RIGHT_BRACE,}>
<RESERVED_SUBROUTINE,sub>
<SUBROUTINE_IDENTIFIER,subtr>
<LEFT_PAREN,(>
<SCALAR_IDENTIFIER,$numero1>
<COMMA,,>
<SCALAR_IDENTIFIER,$numero2>
<RIGHT_PAREN,)>
<LEFT_BRACE,{>
<SCALAR_IDENTIFIER,$res>
<OPERATOR_ASSIGN,=>
<SCALAR_IDENTIFIER,$numero1>
<OPERATOR_MINUS,->
<SCALAR_IDENTIFIER,$numero2>
<SEMICOLON,;>
<RESERVED_RETURN,return>
<SCALAR_IDENTIFIER,$res>
<SEMICOLON,;>
<RIGHT_BRACE,}>
<RESERVED_SUBROUTINE,sub>
<SUBROUTINE_IDENTIFIER,multi>
<LEFT_PAREN,(>
<SCALAR_IDENTIFIER,$numero1>
<COMMA,,>
<SCALAR_IDENTIFIER,$numero2>
<RIGHT_PAREN,)>
<LEFT_BRACE,{>
<SCALAR_IDENTIFIER,$res>
<OPERATOR_ASSIGN,=>
<SCALAR_IDENTIFIER,$numero1>
<OPERATOR_MUL,*>
<SCALAR_IDENTIFIER,$numero2>
<SEMICOLON,;>
<RESERVED_RETURN,return>
<SCALAR_IDENTIFIER,$res>
<SEMICOLON,;>
<RIGHT_BRACE,}>
<RESERVED_SUBROUTINE,sub>
<SUBROUTINE_IDENTIFIER,div>
<LEFT_PAREN,(>
<SCALAR_IDENTIFIER,$numero1>
<COMMA,,>
<SCALAR_IDENTIFIER,$numero2>
<RIGHT_PAREN,)>
<LEFT_BRACE,{>
<SCALAR_IDENTIFIER,$res>
<OPERATOR_ASSIGN,=>
<SCALAR_IDENTIFIER,$numero1>
<OPERATOR_DIV,/>
<SCALAR_IDENTIFIER,$numero2>
<SEMICOLON,;>
<SCALAR_IDENTIFIER,$erro>
<OPERATOR_ASSIGN,=>
<STRING,'não podemos dividir por zero'>
<SEMICOLON,;>
<RESERVED_IF,if>
<LEFT_PAREN,(>
<SCALAR_IDENTIFIER,$numero2>
<OPERATOR_EQ_NUMERIC,==>
<INTEGER_NUMBER,0>
<RIGHT_PAREN,)>
<LEFT_BRACE,{>
<RESERVED_RETURN,return>
<SCALAR_IDENTIFIER,$erro>
<SEMICOLON,;>
<RIGHT_BRACE,}>
<RESERVED_RETURN,return>
<SCALAR_IDENTIFIER,$res>
<SEMICOLON,;>
<RIGHT_BRACE,}>
<RESERVED_SUBROUTINE,sub>
<SUBROUTINE_IDENTIFIER,mod>
<LEFT_PAREN,(>
<SCALAR_IDENTIFIER,$numero1>
<COMMA,,>
<SCALAR_IDENTIFIER,$numero2>
<RIGHT_PAREN,)>
<LEFT_BRACE,{>
<SCALAR_IDENTIFIER,$res>
<OPERATOR_ASSIGN,=>
<SCALAR_IDENTIFIER,$numero1>
<OPERATOR_MOD,%>
<SCALAR_IDENTIFIER,$numero2>
<SEMICOLON,;>
<RESERVED_RETURN,return>
<SCALAR_IDENTIFIER,$res>
<SEMICOLON,;>
<RIGHT_BRACE,}>
<SCALAR_IDENTIFIER,$soma>
<OPERATOR_ASSIGN,=>
<SUBROUTINE_IDENTIFIER,soma>
<LEFT_PAREN,(>
<RIGHT_PAREN,)>
<SEMICOLON,;>
<SCALAR_IDENTIFIER,$subtr>
<OPERATOR_ASSIGN,=>
<SUBROUTINE_IDENTIFIER,subtr>
<LEFT_PAREN,(>
<RIGHT_PAREN,)>
<SEMICOLON,;>
<SCALAR_IDENTIFIER,$multi>
<OPERATOR_ASSIGN,=>
<SUBROUTINE_IDENTIFIER,multi>
<LEFT_PAREN,(>
<RIGHT_PAREN,)>
<SEMICOLON,;>
<SCALAR_IDENTIFIER,$div>
<OPERATOR_ASSIGN,=>
<SUBROUTINE_IDENTIFIER,div>
<LEFT_PAREN,(>
<RIGHT_PAREN,)>
<SEMICOLON,;>
<SCALAR_IDENTIFIER,$mod>
<OPERATOR_ASSIGN,=>
<SUBROUTINE_IDENTIFIER,mod>
<LEFT_PAREN,(>
<RIGHT_PAREN,)>
<SEMICOLON,;>
<RESERVED_SAY,say>
<STRING_PRINT,"$soma, $subtr, $multi, $div, $mod">
<SEMICOLON,;>
<VECTOR_IDENTIFIER,@arrayOfNumbers>
<OPERATOR_ASSIGN,=>
<ARRAY_OF_NUMBERS,(-10, +10, -30.30 , 450.40)>
<SEMICOLON,;>
<SCALAR_IDENTIFIER,$cont>
<OPERATOR_ASSIGN,=>
<INTEGER_NUMBER,3>
<SEMICOLON,;>
<RESERVED_WHILE,while>
<LEFT_PAREN,(>
<SCALAR_IDENTIFIER,$cont>
<OPERATOR_GT_NUMERIC,>>
<INTEGER_NUMBER,0>
<RIGHT_PAREN,)>
<LEFT_BRACE,{>
<RESERVED_PRINT,print>
<STRING_PRINT,"$arrayOfNumbers[$cont]">
<SEMICOLON,;>
<SCALAR_IDENTIFIER,$cont>
<OPERATOR_ASSIGN,=>
<SCALAR_IDENTIFIER,$cont>
<OPERATOR_MINUS,->
<INTEGER_NUMBER,1>
<SEMICOLON,;>
<RIGHT_BRACE,}>
<VECTOR_IDENTIFIER,@arrayOfStrings>
<OPERATOR_ASSIGN,=>
<ARRAY_OF_STRINGS,("Let's do it!", 'Is perl lexer ready?')>
<SEMICOLON,;>
